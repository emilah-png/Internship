<?xml version="1.0" encoding="UTF-8"?>
<project>
  <!--(*
 *
 * File: Sim2Twin_controlsystem_pos_Discrete.xml
 *
 * IEC 61131-3 Structured Text (ST) code generated for subsystem "Sim2Twin_controlsystem_pos_Discrete/CTRL"
 *
 * Model name                      : Sim2Twin_controlsystem_pos_Discrete
 * Model version                   : 1.4
 * Model creator                   : Emila
 * Model last modified by          : Are-Laptop
 * Model last modified on          : Fri Nov 01 13:17:03 2024
 * Model sample time               : 0s
 * Subsystem name                  : Sim2Twin_controlsystem_pos_Discrete/CTRL
 * Subsystem sample time           : 0.2s
 * Simulink PLC Coder version      : 24.2 (R2024b) 21-Jun-2024
 * ST code generated on            : Fri Nov 01 13:23:45 2024
 *
 * Target IDE selection            : Beckhoff TwinCAT 3
 * Test Bench included             : No
 *
 *)
-->
  <fileHeader companyName="The Mathworks, Inc." companyURL="www.mathworks.com" contentDescription="" creationDateTime="2024-11-01T13:23:44" productName="Simulink PLC Coder" productRelease="(R2024b)" productVersion="24.2"/>
  <contentHeader name="Sim2Twin_controlsystem_pos_Discrete">
    <coordinateInfo>
      <fbd>
        <scaling x="0" y="0"/>
      </fbd>
      <ld>
        <scaling x="0" y="0"/>
      </ld>
      <sfc>
        <scaling x="0" y="0"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="CTRL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ssMethodType">
              <type>
                <SINT/>
              </type>
            </variable>
            <variable name="X_real">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Pa">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Pb">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Ps">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="X_dot">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="X">
              <type>
                <LREAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="u">
              <type>
                <LREAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="rtb_DiscreteTransferFcn">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="rtb_TSamp">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="rtb_Sum1">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Sum1">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="DiscreteTransferFcn1">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="temp1">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="temp2">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="c_DiscreteTimeIntegrator_DS">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="DiscreteTransferFcn_states">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="DiscreteTransferFcn1_states">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="DiscreteTransferFcn2_states">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="DiscreteTransferFcn3_states">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="c_DiscreteTransferFcn_state">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="UD_DSTATE">
              <type>
                <LREAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[

CASE ssMethodType OF
    SS_INITIALIZE: 
        (* SystemInitialize for Atomic SubSystem: '<Root>/CTRL' *)
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn' *)
        DiscreteTransferFcn_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn1' *)
        DiscreteTransferFcn1_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn2' *)
        DiscreteTransferFcn2_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn3' *)
        DiscreteTransferFcn3_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S2>/Discrete Transfer Fcn' *)
        c_DiscreteTransferFcn_state := 0.0;
        (* InitializeConditions for DiscreteIntegrator: '<S2>/Discrete-Time Integrator' *)
        c_DiscreteTimeIntegrator_DS := 0.0;
        (* InitializeConditions for UnitDelay: '<S4>/UD'
         *
         * Block description for '<S4>/UD':
         *  
         *  Store in Global RAM *)
        UD_DSTATE := 0.0;
        (* End of SystemInitialize for SubSystem: '<Root>/CTRL' *)
    SS_STEP: 
        (* Outputs for Atomic SubSystem: '<Root>/CTRL' *)
        (* Sum: '<S1>/Sum1' *)
        Sum1 := X - X_real;
        (* DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn' *)
        rtb_DiscreteTransferFcn := 0.09516 * DiscreteTransferFcn_states;
        (* DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn1' *)
        DiscreteTransferFcn1 := 0.003137 * DiscreteTransferFcn1_states;
        (* SampleTimeMath: '<S4>/TSamp' incorporates:
         *  DiscreteTransferFcn: '<S2>/Discrete Transfer Fcn'
         *
         * About '<S4>/TSamp':
         *  y = u * K where K = 1 / ( w * Ts )
         *   *)
        rtb_TSamp := (0.0009995 * c_DiscreteTransferFcn_state) * 5.0;
        (* Sum: '<S2>/Sum1' incorporates:
         *  DiscreteIntegrator: '<S2>/Discrete-Time Integrator'
         *  Gain: '<S2>/Kp1'
         *  Sum: '<S4>/Diff'
         *  UnitDelay: '<S4>/UD'
         *
         * Block description for '<S4>/Diff':
         *  
         *  Add in CPU
         *
         * Block description for '<S4>/UD':
         *  
         *  Store in Global RAM *)
        rtb_Sum1 := ((2.0 * Sum1) + c_DiscreteTimeIntegrator_DS) + (rtb_TSamp - UD_DSTATE);
        (* MATLAB Function: '<S1>/V2Q2u' incorporates:
         *  DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn2'
         *  DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn3' *)
        (* MATLAB Function 'CTRL/V2Q2u': '<S3>:1' *)
        (* '<S3>:1:3' phi = 0.7130; *)
        (* '<S3>:1:4' A = 33.1/100^2; *)
        (* Area *)
        (* '<S3>:1:5' BW = 0; *)
        (* deadband *)
        (* '<S3>:1:6' SpoolTravel = 7; *)
        (* Maximum Spool Travel *)
        (* '<S3>:1:7' a = (SpoolTravel-BW)/25; *)
        (* Valve Slope Characteristic [mm/(L/min)] *)
        (* '<S3>:1:8' dP_0 = 7e5; *)
        (* Pressure drop with compansator *)
        (* '<S3>:1:10' if x_dot > 0 *)

        IF X_dot > 0.0 THEN 
            (* '<S3>:1:11' Q = x_dot * A; *)
            (* Wanted Flow *)
            (* '<S3>:1:12' dP = (Ps-Pa)*1e5; *)
            (* '<S3>:1:13' dp_ref = abs(dP_0/dP); *)
            (* dp_ref = 1; *)
            (* '<S3>:1:15' Q_star = (Q * sqrt(dp_ref)) * 6e4; *)
            (* Referance Flow [L/min] *)
            (* '<S3>:1:16' u = (Q_star * a + BW)/SpoolTravel; *)
            temp2 := ABS(700000.0 / ((DiscreteTransferFcn1 - (0.003137 * DiscreteTransferFcn2_states)) * 100000.0));
            u := (((SQRT(temp2) * (X_dot * 0.00331)) * 60000.0) * 0.28) / 7.0;
            (* Control Signal [-1, 1] *)
        ELSIF X_dot < 0.0 THEN 
            (* '<S3>:1:18' elseif x_dot < 0 *)
            (* '<S3>:1:19' Q = x_dot * (A*phi); *)
            (* Wanted Flow *)
            (* '<S3>:1:20' dP = (Ps-Pb)*1e5; *)
            (* '<S3>:1:21' dp_ref = abs(dP_0/dP); *)
            (* dp_ref = 1; *)
            (* '<S3>:1:23' Q_star = (Q * sqrt(dp_ref)) * 6e4; *)
            (* Referance Flow [L/min] *)
            (* '<S3>:1:24' u = (Q_star * a - BW)/SpoolTravel; *)
            temp1 := ABS(700000.0 / ((DiscreteTransferFcn1 - (0.003137 * DiscreteTransferFcn3_states)) * 100000.0));
            u := (((SQRT(temp1) * (X_dot * 0.00236003)) * 60000.0) * 0.28) / 7.0;
            (* Control Signal [-1, 1] *)
        ELSE 
            (* '<S3>:1:26' else *)
            (* '<S3>:1:27' u = 0; *)
            u := 0.0;
        END_IF;

        (* End of MATLAB Function: '<S1>/V2Q2u' *)
        

        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn' *)
        DiscreteTransferFcn_states := u - (-0.9048 * DiscreteTransferFcn_states);
        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn1' *)
        DiscreteTransferFcn1_states := Ps - (-0.9969 * DiscreteTransferFcn1_states);
        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn2' *)
        DiscreteTransferFcn2_states := Pa - (-0.9969 * DiscreteTransferFcn2_states);
        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn3' *)
        DiscreteTransferFcn3_states := Pb - (-0.9969 * DiscreteTransferFcn3_states);
        (* Update for DiscreteTransferFcn: '<S2>/Discrete Transfer Fcn' *)
        c_DiscreteTransferFcn_state := Sum1 - (-0.999 * c_DiscreteTransferFcn_state);
        (* Update for DiscreteIntegrator: '<S2>/Discrete-Time Integrator' *)
        c_DiscreteTimeIntegrator_DS := (0.2 * Sum1) + c_DiscreteTimeIntegrator_DS;
        (* Update for UnitDelay: '<S4>/UD'
         *
         * Block description for '<S4>/UD':
         *  
         *  Store in Global RAM *)
        UD_DSTATE := rtb_TSamp;
        (* Outport: '<Root>/u' incorporates:
         *  Sum: '<S1>/Sum' *)
        u := rtb_DiscreteTransferFcn + rtb_Sum1;
        (* End of Outputs for SubSystem: '<Root>/CTRL' *)
END_CASE;


]]></xhtml>
          </ST>
        </body>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Configuration">
        <resource name="Sim2Twin_controlsystem_pos_Discrete_res">
          <globalVars constant="true">
            <variable name="SS_INITIALIZE">
              <type>
                <SINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="SS_STEP">
              <type>
                <SINT/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </globalVars>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
