<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_ControlBlockPos" Id="{581b1044-d627-4f64-ad6f-f3930a7c4d8e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ControlBlockPos
VAR_INPUT
	ssMethodType: SINT;
	X_real: LREAL;
	Pa: LREAL;
	Pb: LREAL;
	Ps: LREAL;
	X_dot: LREAL;
	X: LREAL;
END_VAR
VAR_OUTPUT
	u: LREAL;
END_VAR
VAR
	rtb_DiscreteTransferFcn: LREAL;
	rtb_TSamp: LREAL;
	rtb_Sum1: LREAL;
	Sum1: LREAL;
	DiscreteTransferFcn1: LREAL;
	temp1: LREAL;
	temp2: LREAL;
	c_DiscreteTimeIntegrator_DS: LREAL;
	DiscreteTransferFcn_states: LREAL;
	DiscreteTransferFcn1_states: LREAL;
	DiscreteTransferFcn2_states: LREAL;
	DiscreteTransferFcn3_states: LREAL;
	c_DiscreteTransferFcn_state: LREAL;
	UD_DSTATE: LREAL;
	bEnablePID : BOOL;
	bEnableU : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

CASE ssMethodType OF
    SS_INITIALIZE: 
        (* SystemInitialize for Atomic SubSystem: '<Root>/CTRL' *)
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn' *)
        DiscreteTransferFcn_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn1' *)
        DiscreteTransferFcn1_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn2' *)
        DiscreteTransferFcn2_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn3' *)
        DiscreteTransferFcn3_states := 0.0;
        (* InitializeConditions for DiscreteTransferFcn: '<S2>/Discrete Transfer Fcn' *)
        c_DiscreteTransferFcn_state := 0.0;
        (* InitializeConditions for DiscreteIntegrator: '<S2>/Discrete-Time Integrator' *)
        c_DiscreteTimeIntegrator_DS := 0.0;
        (* InitializeConditions for UnitDelay: '<S4>/UD'
         *
         * Block description for '<S4>/UD':
         *  
         *  Store in Global RAM *)
        UD_DSTATE := 0.0;
        (* End of SystemInitialize for SubSystem: '<Root>/CTRL' *)
    SS_STEP: 
        (* Outputs for Atomic SubSystem: '<Root>/CTRL' *)
        (* Sum: '<S1>/Sum1' *)
        Sum1 := X - X_real;
        (* DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn' *)
        rtb_DiscreteTransferFcn := 0.09516 * DiscreteTransferFcn_states;
		IF (rtb_DiscreteTransferFcn > 1.0) THEN
				
				rtb_DiscreteTransferFcn := 1.0;
				
			ELSIF (rtb_DiscreteTransferFcn < -1.0) THEN
				
				rtb_DiscreteTransferFcn := -1;
				
			END_IF
        (* DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn1' *)
        DiscreteTransferFcn1 := 0.003137 * DiscreteTransferFcn1_states;
        (* SampleTimeMath: '<S4>/TSamp' incorporates:
         *  DiscreteTransferFcn: '<S2>/Discrete Transfer Fcn'
         *
         * About '<S4>/TSamp':
         *  y = u * K where K = 1 / ( w * Ts )
         *   *)
        rtb_TSamp := (0.0009995 * c_DiscreteTransferFcn_state) * 5.0;
        (* Sum: '<S2>/Sum1' incorporates:
         *  DiscreteIntegrator: '<S2>/Discrete-Time Integrator'
         *  Gain: '<S2>/Kp1'
         *  Sum: '<S4>/Diff'
         *  UnitDelay: '<S4>/UD'
         *
         * Block description for '<S4>/Diff':
         *  
         *  Add in CPU
         *
         * Block description for '<S4>/UD':
         *  
         *  Store in Global RAM *)
		IF (bEnablePID) THEN
        	rtb_Sum1 := ((2.0 * Sum1) + 0.0 * c_DiscreteTimeIntegrator_DS) + 0.0 * (rtb_TSamp - UD_DSTATE);
			
			IF (rtb_Sum1 > 1.0) THEN
				
				rtb_Sum1 := 1.0;
				
			ELSIF (rtb_Sum1 < -1.0) THEN
				
				rtb_Sum1 := -1;
				
			END_IF
		ELSE
			rtb_Sum1 := 0.0;
		END_IF
        (* MATLAB Function: '<S1>/V2Q2u' incorporates:
         *  DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn2'
         *  DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn3' *)
        (* MATLAB Function 'CTRL/V2Q2u': '<S3>:1' *)
        (* '<S3>:1:3' phi = 0.7130; *)
        (* '<S3>:1:4' A = 33.1/100^2; *)
        (* Area *)
        (* '<S3>:1:5' BW = 0; *)
        (* deadband *)
        (* '<S3>:1:6' SpoolTravel = 7; *)
        (* Maximum Spool Travel *)
        (* '<S3>:1:7' a = (SpoolTravel-BW)/25; *)
        (* Valve Slope Characteristic [mm/(L/min)] *)
        (* '<S3>:1:8' dP_0 = 7e5; *)
        (* Pressure drop with compansator *)
        (* '<S3>:1:10' if x_dot > 0 *)

        IF X_dot > 0.0 THEN 
            (* '<S3>:1:11' Q = x_dot * A; *)
            (* Wanted Flow *)
            (* '<S3>:1:12' dP = (Ps-Pa)*1e5; *)
            (* '<S3>:1:13' dp_ref = abs(dP_0/dP); *)
            (* dp_ref = 1; *)
            (* '<S3>:1:15' Q_star = (Q * sqrt(dp_ref)) * 6e4; *)
            (* Referance Flow [L/min] *)
            (* '<S3>:1:16' u = (Q_star * a + BW)/SpoolTravel; *)
            temp2 := ABS(700000.0 / ((DiscreteTransferFcn1 - (0.003137 * DiscreteTransferFcn2_states)) * 100000.0));
            u := (((SQRT(temp2) * (X_dot * 0.00331)) * 60000.0) * 0.28) / 7.0;
            (* Control Signal [-1, 1] *)
        ELSIF X_dot < 0.0 THEN 
            (* '<S3>:1:18' elseif x_dot < 0 *)
            (* '<S3>:1:19' Q = x_dot * (A*phi); *)
            (* Wanted Flow *)
            (* '<S3>:1:20' dP = (Ps-Pb)*1e5; *)
            (* '<S3>:1:21' dp_ref = abs(dP_0/dP); *)
            (* dp_ref = 1; *)
            (* '<S3>:1:23' Q_star = (Q * sqrt(dp_ref)) * 6e4; *)
            (* Referance Flow [L/min] *)
            (* '<S3>:1:24' u = (Q_star * a - BW)/SpoolTravel; *)
            temp1 := ABS(700000.0 / ((DiscreteTransferFcn1 - (0.003137 * DiscreteTransferFcn3_states)) * 100000.0));
            u := (((SQRT(temp1) * (X_dot * 0.00236003)) * 60000.0) * 0.28) / 7.0;
            (* Control Signal [-1, 1] *)
        ELSE 
            (* '<S3>:1:26' else *)
            (* '<S3>:1:27' u = 0; *)
            u := 0.0;
        END_IF;

        (* End of MATLAB Function: '<S1>/V2Q2u' *)
        

        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn' *)
        DiscreteTransferFcn_states := u - (-0.9048 * DiscreteTransferFcn_states);
        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn1' *)
        DiscreteTransferFcn1_states := Ps - (-0.9969 * DiscreteTransferFcn1_states);
        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn2' *)
        DiscreteTransferFcn2_states := Pa - (-0.9969 * DiscreteTransferFcn2_states);
        (* Update for DiscreteTransferFcn: '<S1>/Discrete Transfer Fcn3' *)
        DiscreteTransferFcn3_states := Pb - (-0.9969 * DiscreteTransferFcn3_states);
        (* Update for DiscreteTransferFcn: '<S2>/Discrete Transfer Fcn' *)
        c_DiscreteTransferFcn_state := Sum1 - (-0.999 * c_DiscreteTransferFcn_state);
        (* Update for DiscreteIntegrator: '<S2>/Discrete-Time Integrator' *)
        c_DiscreteTimeIntegrator_DS := (0.2 * Sum1) + c_DiscreteTimeIntegrator_DS;
        (* Update for UnitDelay: '<S4>/UD'
         *
         * Block description for '<S4>/UD':
         *  
         *  Store in Global RAM *)
        UD_DSTATE := rtb_TSamp;
        (* Outport: '<Root>/u' incorporates:
         *  Sum: '<S1>/Sum' *)		
		IF (bEnableU) THEN
			
			u := rtb_DiscreteTransferFcn + rtb_Sum1;
			
			IF (u > 1.0) THEN
				
				u := 1.0;
				
			ELSIF (u < -1.0) THEN
				
				u := -1;
				
			END_IF
		ELSE
			u := 0.0;
		END_IF
        
        (* End of Outputs for SubSystem: '<Root>/CTRL' *)
END_CASE;


]]></ST>
    </Implementation>
    <LineIds Name="FB_ControlBlockPos">
      <LineId Id="3" Count="27" />
      <LineId Id="197" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="207" Count="7" />
      <LineId Id="206" Count="0" />
      <LineId Id="33" Count="21" />
      <LineId Id="165" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="187" Count="0" />
      <LineId Id="189" Count="7" />
      <LineId Id="188" Count="0" />
      <LineId Id="167" Count="1" />
      <LineId Id="166" Count="0" />
      <LineId Id="56" Count="69" />
      <LineId Id="169" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="171" Count="1" />
      <LineId Id="126" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>