<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_ControlBlock" Id="{1c742f8d-99bf-4aa1-ba99-fa370ccce2ab}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_ControlBlock
VAR
	fbControlBlock : c_FB_ControlBlockWithMonito;
	fbMotionRef : FB_MotionReference;
	fbSineMotionRef : FB_SineMotionRef;
	fbJoyRef : FB_Joystick_2;
	fbClock : FB_Clock;
	fbInitialPos : FB_InitialPos;	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbClock(
	bStart := G_Inputs.bStartButton,
	bStop := G_Inputs.bStopButton,
	fCycleTime :=0.001
);

fbInitialPos(
	bEnable := (G_Work.eStatus = E_Status.Running),
	fCurrentPos := G_Sensors.fPistonPosition,
);

IF (G_Work.eMode = E_Mode.Auto) THEN
	
	
	
	IF (G_Parameter.bMotionSelect) THEN
		
	G_OPC_UA.fXRef := fbMotionRef.fPositionReference_m;
	G_OPC_UA.fXDotRef := fbMotionRef.fVelocityReference_ms;
	
		fbMotionRef(
			fStartPosition_m := fbInitialPos.fInitialPos,
			fStartVelocity_m := G_Parameter.fStartVelocity,
			fPositionSetpoint_ms := G_Parameter.fPositionSetpoint_ms,
			fVelocitySetpoint_m := G_Parameter.fMaxSpeed,
			fTimeBeforeStarting_s := G_Parameter.fTimeBeforeStarting_s,
			fRampTime_s := G_Parameter.fRampTime_s,
			fHoldPositionTime_s := G_Parameter.fHoldPositionTime_s,
			fClock_s:= fbClock.fTime,
			bEnable:= G_Inputs.bStartButton		
		);
		
		fbControlBlock(
		ssMethodType := BOOL_TO_SINT(G_Work.eStatus = E_Status.Running),

		X_dot := fbMotionRef.fVelocityReference_ms,
		X := fbMotionRef.fPositionReference_m,
		
		bEnablePID := G_Parameter.bEnablePID,
			bEnableU := G_Parameter.bEnableU,
			bEnableFF := G_Parameter.bEnableFF,
			bEnableComp := G_Parameter.bEnableComp,
			
		
			X_real:= G_Sensors.fPistonPosition,
		
			Kp := G_Parameter.Kp,
			Ki := G_Parameter.Ki,
			Kd := G_Parameter.Kd,
		
			Pa:= G_Filtered.fPressurePistonSideFiltered, 
			Pb := G_Filtered.fPressureRodSideFiltered,
			Ps:= G_Filtered.fPressureSupplyFiltered,
		
			u_filtered := G_Filtered.fValveOutputFiltered,
		
			u_Unfiltered => G_Filtered.fValveOutputUnfiltered,
			u_Unfiltered => G_OPC_UA.fUnfilteredSignal,
		
			U	=> G_Work.fControlOutputNormalized,
			U	=> G_OPC_UA.fU,
			
			PID_OUT => G_OPC_UA.PID_OUT,
			Error => G_OPC_UA.Error

	);
	ELSE 
		
	G_OPC_UA.fXRef := fbSineMotionRef.X;
	G_OPC_UA.fXDotRef := fbSineMotionRef.X_dot;
	
		fbSineMotionRef(
			ssMethodType := BOOL_TO_SINT(G_Work.eStatus = E_Status.Running),
			fTime := fbClock.fTime,
			fPos_Ramp_Time := G_Parameter.fRampTime_s,
			fPeak_pos := G_Parameter.fPositionSetpoint_ms,
			fStart_vel := G_Parameter.fStartVelocity,
			fStart_time := G_Parameter.fTimeBeforeStarting_s,
			fHold_time := G_Parameter.fHoldPositionTime_s,
			fXStart := fbInitialPos.fInitialPos 
		);
		
		fbControlBlock(
			ssMethodType := BOOL_TO_SINT(G_Work.eStatus = E_Status.Running),

			X_dot := fbSineMotionRef.X_dot,
			X := fbSineMotionRef.X,
			
			bEnablePID := G_Parameter.bEnablePID,
			bEnableU := G_Parameter.bEnableU,
			bEnableFF := G_Parameter.bEnableFF,
			bEnableComp := G_Parameter.bEnableComp,
			
			X_real:= G_Sensors.fPistonPosition,
		
			Kp := G_Parameter.Kp,
			Ki := G_Parameter.Ki,
			Kd := G_Parameter.Kd,
		
			Pa:= G_Filtered.fPressurePistonSideFiltered, 
			Pb := G_Filtered.fPressureRodSideFiltered,
			Ps:= G_Filtered.fPressureSupplyFiltered,
		
			u_filtered := G_Filtered.fValveOutputFiltered,
		
			u_Unfiltered => G_Filtered.fValveOutputUnfiltered,
			u_Unfiltered => G_OPC_UA.fUnfilteredSignal,
		
			U	=> G_Work.fControlOutputNormalized,
			U	=> G_OPC_UA.fU,
			
			PID_OUT => G_OPC_UA.PID_OUT,
			Error => G_OPC_UA.Error

		);
	END_IF

ELSIF (G_Work.eMode = E_Mode.Manual) THEN

	G_OPC_UA.fXRef := fbJoyRef.fPositionReferance_m;
	G_OPC_UA.fXDotRef := fbJoyRef.fVelocityReferance_ms;
	
	fbJoyRef(
		ssMethodType := BOOL_TO_SINT(G_Work.eStatus = E_Status.Running),
		Joystick := G_Sensors.fJoystickY,
		XInital := fbInitialPos.fInitialPos,
	);

	
	fbControlBlock(
	ssMethodType := BOOL_TO_SINT(G_Work.eStatus = E_Status.Running),
	bEnablePID := G_Parameter.bEnablePID,
	bEnableU := G_Parameter.bEnableU,
	bEnableFF := G_Parameter.bEnableFF,
	bEnableComp := G_Parameter.bEnableComp,
		
	X_real:= G_Sensors.fPistonPosition,
	X_dot := fbJoyRef.fVelocityReferance_ms,
	X := fbJoyRef.fPositionReferance_m,
	
	Kp := G_Parameter.Kp,
	Ki := G_Parameter.Ki,
	Kd := G_Parameter.Kd,
	
	Pa:= G_Filtered.fPressurePistonSideFiltered, 
	Pb := G_Filtered.fPressureRodSideFiltered,
	Ps:= G_Filtered.fPressureSupplyFiltered,
	
	u_filtered := G_Filtered.fValveOutputFiltered,
		
	u_Unfiltered => G_Filtered.fValveOutputUnfiltered,
	u_Unfiltered => G_OPC_UA.fUnfilteredSignal,
	
	U	=> G_Work.fControlOutputNormalized,
	U	=> G_OPC_UA.fU,
	
	PID_OUT => G_OPC_UA.PID_OUT,
	Error => G_OPC_UA.Error
	);
END_IF


]]></ST>
    </Implementation>
    <LineIds Name="P_ControlBlock">
      <LineId Id="122" Count="3" />
      <LineId Id="120" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="173" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="449" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="555" Count="3" />
      <LineId Id="32" Count="0" />
      <LineId Id="37" Count="7" />
      <LineId Id="36" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="463" Count="0" />
      <LineId Id="465" Count="1" />
      <LineId Id="470" Count="2" />
      <LineId Id="585" Count="0" />
      <LineId Id="587" Count="1" />
      <LineId Id="618" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="619" Count="0" />
      <LineId Id="589" Count="17" />
      <LineId Id="635" Count="0" />
      <LineId Id="607" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="490" Count="0" />
      <LineId Id="464" Count="0" />
      <LineId Id="450" Count="0" />
      <LineId Id="559" Count="2" />
      <LineId Id="608" Count="0" />
      <LineId Id="451" Count="0" />
      <LineId Id="456" Count="6" />
      <LineId Id="455" Count="0" />
      <LineId Id="454" Count="0" />
      <LineId Id="491" Count="0" />
      <LineId Id="493" Count="1" />
      <LineId Id="498" Count="2" />
      <LineId Id="562" Count="0" />
      <LineId Id="564" Count="2" />
      <LineId Id="621" Count="1" />
      <LineId Id="567" Count="17" />
      <LineId Id="634" Count="0" />
      <LineId Id="563" Count="0" />
      <LineId Id="518" Count="0" />
      <LineId Id="492" Count="0" />
      <LineId Id="452" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="146" Count="1" />
      <LineId Id="623" Count="1" />
      <LineId Id="148" Count="0" />
      <LineId Id="76" Count="2" />
      <LineId Id="385" Count="0" />
      <LineId Id="388" Count="1" />
      <LineId Id="387" Count="0" />
      <LineId Id="386" Count="0" />
      <LineId Id="79" Count="2" />
      <LineId Id="408" Count="0" />
      <LineId Id="410" Count="1" />
      <LineId Id="409" Count="0" />
      <LineId Id="422" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="423" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="437" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="52" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>