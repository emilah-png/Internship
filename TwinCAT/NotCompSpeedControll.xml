<?xml version="1.0" encoding="UTF-8"?>
<project>
  <!--(*
 *
 * File: PID_notcomp.xml
 *
 * IEC 61131-3 Structured Text (ST) code generated for subsystem "PID_notcomp/CTRL/V2Q2u"
 *
 * Model name                      : PID_notcomp
 * Model version                   : 3.65
 * Model creator                   : Emila
 * Model last modified by          : Emila
 * Model last modified on          : Mon Oct 21 12:09:18 2024
 * Model sample time               : 0s
 * Subsystem name                  : PID_notcomp/CTRL/V2Q2u
 * Subsystem sample time           : 0.18s
 * Simulink PLC Coder version      : 24.2 (R2024b) 21-Jun-2024
 * ST code generated on            : Wed Oct 23 12:53:10 2024
 *
 * Target IDE selection            : Beckhoff TwinCAT 3
 * Test Bench included             : No
 *
 *)
-->
  <fileHeader companyName="The Mathworks, Inc." companyURL="www.mathworks.com" contentDescription="" creationDateTime="2024-10-23T12:53:09" productName="Simulink PLC Coder" productRelease="(R2024b)" productVersion="24.2"/>
  <contentHeader name="PID_notcomp">
    <coordinateInfo>
      <fbd>
        <scaling x="0" y="0"/>
      </fbd>
      <ld>
        <scaling x="0" y="0"/>
      </ld>
      <sfc>
        <scaling x="0" y="0"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="V2Q2u" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ps">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Pa">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Pb">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="y">
              <type>
                <LREAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="u">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="Q_lm">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="dP">
              <type>
                <LREAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Q_star">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="temp1">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="temp2">
              <type>
                <LREAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"><![CDATA[
(* MATLAB Function: '<Root>/V2Q2u' *)
(* MATLAB Function 'V2Q2u': '<S1>:1' *)
(* '<S1>:1:3' phi = 0.7130; *)
(* '<S1>:1:4' A = 33.1/100^2; *)
(* Area *)
(* '<S1>:1:5' BW = 0; *)
(* Bandwidth *)
(* '<S1>:1:6' SpoolTravel = 7; *)
(* Maximum Spool Travel *)
(* '<S1>:1:7' a = (SpoolTravel-BW)/25; *)
(* Valve Slope Characteristic [mm/(L/min)] *)
(* '<S1>:1:8' dP_0 = 7e5; *)
(* Pressure drop with compansator *)
(* '<S1>:1:10' if x_dot > 0 *)

IF y > 0.0 THEN 
    (* '<S1>:1:11' Q = x_dot * A; *)
    (* Wanted Flow *)
    (* '<S1>:1:12' dP = (Ps-Pa)*1e5; *)
    dP := (Ps - Pa) * 100000.0;
    (* '<S1>:1:13' dp_ref = abs(dP_0/dP); *)
    (* dp_ref = 1; *)
    (* '<S1>:1:15' Q_star = (Q * sqrt(dp_ref)) * 6e4; *)
    temp2 := ABS(700000.0 / dP);
    Q_star := ((y * 0.00331) * SQRT(temp2)) * 60000.0;
    (* Outport: '<Root>/u' *)
    (* Referance Flow [L/min] *)
    (* '<S1>:1:16' u = (Q_star * a + BW)/SpoolTravel; *)
    u := (Q_star * 0.28) / 7.0;
    (* Control Signal [-1, 1] *)
ELSIF y < 0.0 THEN 
    (* '<S1>:1:18' elseif x_dot < 0 *)
    (* '<S1>:1:19' Q = x_dot * (A*phi); *)
    (* Wanted Flow *)
    (* '<S1>:1:20' dP = (Ps-Pb)*1e5; *)
    dP := (Ps - Pb) * 100000.0;
    (* '<S1>:1:21' dp_ref = abs(dP_0/dP); *)
    (* dp_ref = 1; *)
    (* '<S1>:1:23' Q_star = (Q * sqrt(dp_ref)) * 6e4; *)
    temp1 := ABS(700000.0 / dP);
    Q_star := ((y * 0.00236003) * SQRT(temp1)) * 60000.0;
    (* Outport: '<Root>/u' *)
    (* Referance Flow [L/min] *)
    (* '<S1>:1:24' u = (Q_star * a - BW)/SpoolTravel; *)
    u := (Q_star * 0.28) / 7.0;
    (* Control Signal [-1, 1] *)
ELSE 
    (* '<S1>:1:26' else *)
    (* '<S1>:1:27' Q_star = 0; *)
    Q_star := 0.0;
    (* '<S1>:1:28' dP = 0; *)
    dP := 0.0;
    (* Outport: '<Root>/u' *)
    (* '<S1>:1:29' u = 0; *)
    u := 0.0;
END_IF;

(* Outport: '<Root>/Q_lm' incorporates:
 *  MATLAB Function: '<Root>/V2Q2u' *)
(* '<S1>:1:32' Q_lm = Q_star; *)
(* Q * 6e4; *)
Q_lm := Q_star;

]]></xhtml>
          </ST>
        </body>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations/>
  </instances>
</project>
